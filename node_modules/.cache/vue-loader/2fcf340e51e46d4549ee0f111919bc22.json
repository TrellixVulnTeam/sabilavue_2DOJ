{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/sabilavue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/sabilavue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/XAMPP/xamppfiles/htdocs/sabilavue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/sabilavue/src/views/ShoppingCart.vue?vue&type=template&id=0a4f6c3c&scoped=true&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/sabilavue/src/views/ShoppingCart.vue","mtime":1615741056148},{"path":"/Applications/XAMPP/xamppfiles/htdocs/sabilavue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/sabilavue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/sabilavue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/sabilavue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}